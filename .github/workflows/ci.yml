name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2

    - name: Run golangci-lint
      run: golangci-lint run

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: |
        go build -v ./cmd/gtfs-validator

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o gtfs-validator-linux-amd64 ./cmd/gtfs-validator
        GOOS=linux GOARCH=arm64 go build -o gtfs-validator-linux-arm64 ./cmd/gtfs-validator
        GOOS=darwin GOARCH=amd64 go build -o gtfs-validator-darwin-amd64 ./cmd/gtfs-validator
        GOOS=darwin GOARCH=arm64 go build -o gtfs-validator-darwin-arm64 ./cmd/gtfs-validator
        GOOS=windows GOARCH=amd64 go build -o gtfs-validator-windows-amd64.exe ./cmd/gtfs-validator

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          gtfs-validator-linux-*
          gtfs-validator-darwin-*
          gtfs-validator-windows-*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint, build]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
